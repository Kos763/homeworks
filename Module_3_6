data_structure = [
[1, 2, 3],
{'a': 4, 'b': 5},
(6, {'cube': 7, 'drum': 8}),
"Hello",
((), [{(2, 'Urban', ('Urban2', 35))}])
]


def calculate_structure_sum(data_):
    total_sum = 0
    sum_str = 0

    def recurs(data):
        nonlocal total_sum, sum_str
        if isinstance(data, list) or isinstance(data, tuple) or isinstance(data, set):
            for item in data:
                recurs(item)
        elif isinstance(data, dict):
            for value in data.values():
                recurs(value)
            for key in data.keys():
                recurs(key)
        elif isinstance(data, int) or isinstance(data_, str):
            if isinstance(data, int):
                total_sum += data
        elif isinstance(data, str):
            sum_str += len(data)

    recurs(data_)

    return total_sum + sum_str


result = calculate_structure_sum(data_structure)
print(result)
